Q5. 3 Sum

Problem Description
Given an array A of N integers, find three integers in A such that the sum is closest to a given number B. Return the sum of those three integers.

Assume that there will only be one solution.



Problem Constraints
-108 <= B <= 108
1 <= N <= 104
-108 <= A[i] <= 108


Input Format
First argument is an integer array A of size N.

Second argument is an integer B denoting the sum you need to get close to.



Output Format
Return a single integer denoting the sum of three integers which is closest to B.



Example Input
Input 1:

A = [-1, 2, 1, -4]
B = 1
Input 2:

 
A = [1, 2, 3]
B = 6


Example Output
Output 1:

2
Output 2:

6


Example Explanation
Explanation 1:

 The sum that is closest to the target is 2. (-1 + 2 + 1 = 2)
Explanation 2:

 Take all elements to get exactly 6.

CODE:

module.exports = {
    //param A : array of integers
    //param B : integer
    //return an integer
    threeSumClosest: function (A, B) {

        A.sort((a, b) => a - b);
        let closestSum = Number.MAX_SAFE_INTEGER;
        for (let i = 0; i < A.length; i++) {
            let p1 = i + 1;;
            let p2 = A.length - 1;
            while (p1 < p2) {
                let sum = A[i] + A[p1] + A[p2];
                if (Math.abs(B - sum) < Math.abs(B - closestSum)) {
                    closestSum = sum;
                }
                if (sum > B) {
                    p2--;
                } else {
                    p1++;
                }
            }
        }
        return closestSum;

    }
};