Q3. Container With Most Water

Problem Description
Given n non-negative integers A[0], A[1], ..., A[n-1] , where each represents a point at coordinate (i, A[i]).

N vertical lines are drawn such that the two endpoints of line i is at (i, A[i]) and (i, 0).

Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container.



Problem Constraints
0 <= N <= 10^5

1 <= A[i] <= 10^5



Input Format
Single Argument representing a 1-D array A.



Output Format
Return single Integer denoting the maximum area you can obtain.



Example Input
Input 1:

A = [1, 5, 4, 3]
Input 2:

A = [1]


Example Output
Output 1:

 6
Output 2:

 0


Example Explanation
Explanation 1:

 
5 and 3 are distance 2 apart. So size of the base = 2. Height of container = min(5, 3) = 3. 
So total area = 3 * 2 = 6
Explanation 2:

 
No container is formed.

CODE : 

module.exports = {
    //param A : array of integers
    //return an integer
    maxArea: function (A) {
        let len = A.length;
        let p1 = 0;
        let p2 = len - 1;
        let ans = 0;
        // edge case condition if array contains only 1 element
        if (len == 1) {
            return 0;
        }
        while (p1 < p2) {
            let height = Math.min(A[p1], A[p2]); // The maximum height of the container would be minimum of height at 2 pointers
            let width = p2 - p1;
            let capacity = height * width;
            ans=Math.max(ans,capacity)
            // As there will not be better capcity with given set of minimum height, we need to move that pointer
            if (height == A[p1]) {
                p1++;
            } else if (height == A[p2]) {
                p2--;
            }
        } return ans;

    }
};
